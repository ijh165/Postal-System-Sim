package com.ijh165.postalsystem.frontend.dialog;

import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author IvanJonathan
 */
public class DelayCommandDialog extends javax.swing.JDialog {

    /**
     * Creates new form DelayCommandDialog
     */
    public DelayCommandDialog(java.awt.Frame parent, boolean modal) {
        //basic initialization
        super(parent, modal);
        initComponents();
        //center depending on parent
        super.setLocationRelativeTo(parent);
        //initialize completeCommand
        command = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        delayVictimLabel = new javax.swing.JLabel();
        delayAmountLabel = new javax.swing.JLabel();
        delayVictimTextField = new javax.swing.JTextField();
        delayAmountTextField = new javax.swing.JTextField();
        confirmButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("NSADELAY Command");

        delayVictimLabel.setText("Delay Victim:");

        delayAmountLabel.setText("Delay Amount:");

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(delayAmountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delayVictimLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delayVictimTextField)
                    .addComponent(delayAmountTextField)))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 449, Short.MAX_VALUE)
                .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delayVictimLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delayVictimTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delayAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delayAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        //fetch input
        String delayVictim = delayVictimTextField.getText();
        String delayAmount = delayAmountTextField.getText();
        //check for empty input
        if (delayVictim.length()==0 || delayAmount.length()==0) {
            JOptionPane.showMessageDialog(this, "All fields cannot be empty!",
                                          "Required information missing!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //validate input
        Pattern nonAlphabeticPattern = Pattern.compile("[^a-zA-Z]");
        Pattern nonNumericPattern = Pattern.compile("[^0-9]");
        if (nonAlphabeticPattern.matcher(delayVictim).find() || nonNumericPattern.matcher(delayAmount).find()) {
            String delayVictimString = delayVictimLabel.getText().substring(0, delayVictimLabel.getText().length()-1);
            String delayAmountString = delayAmountLabel.getText().substring(0, delayAmountLabel.getText().length()-1);
            JOptionPane.showMessageDialog(this,
                                          "All fields must not contain spaces!\n" +
                                          "\"" + delayVictimString + "\" must be alphabetic!\n" +
                                          "\"" + delayAmountString + "\" must be non negative integer!\n",
                                          "Invalid input!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //concatenate into command
        command = "NSADELAY " + delayVictim + " " + delayAmount;
        //close dialog
        dispose();
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    public void setDelayVictimTextField(String text) {
        delayVictimTextField.setText(text);
    }
    
    public void setDelayAmountTextField(String text) {
        delayAmountTextField.setText(text);
    }
    
    public String getCommand() {
        return command;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel delayAmountLabel;
    private javax.swing.JTextField delayAmountTextField;
    private javax.swing.JLabel delayVictimLabel;
    private javax.swing.JTextField delayVictimTextField;
    // End of variables declaration//GEN-END:variables

    private String command;
}
